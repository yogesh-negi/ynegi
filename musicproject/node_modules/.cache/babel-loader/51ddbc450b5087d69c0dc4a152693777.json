{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yogesh\\\\Desktop\\\\musicplayer\\\\musicapp\\\\musicproject\\\\src\\\\Components\\\\form.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getformData = e => {\n      this.setState({\n        [e.target.name]: e.target.value,\n        Name: this.props.selectedsongs\n      }); //     if(e.target.files){\n      //         let file = e.target.files[0];\n      //    let filereader = new FileReader();\n      //    filereader.addEventListener(\"load\", ()=>{\n      //     let imagetag = document.querySelector(\"img\"); \n      //     imagetag.src = filereader.result\n      //    });\n      //    filereader.readAsDataURL(file)   \n      //     }\n    };\n\n    this.fileFunc = e => {\n      this.setState({\n        [e.target.name]: e.target.files[0]\n      });\n    };\n\n    this.sendDatatoServer = e => {\n      e.preventDefault();\n      const data = new FormData();\n      data.append('file', this.state.file);\n      data.append('body', JSON.stringify(this.state));\n\n      if (this.state.file.name) {\n        axios.post(\"http://localhost:4000/test\", data).then(data => {}).catch(error => console.log(error.message));\n      } else {\n        alert(\"must choose a file\");\n      }\n    };\n\n    this.state = {\n      playlistname: \"\",\n      cover: \"\",\n      Name: \"\",\n      year: \"\",\n      file: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"songlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        action: \"/\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Playlist Name\",\n          name: \"playlistname\",\n          onChange: this.getformData,\n          value: this.state.playlistname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"cover image url\",\n          name: \"cover\",\n          onChange: this.getformData,\n          value: this.state.cover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\",\n          name: \"Name\",\n          onChange: this.getformData,\n          value: this.props.selectedsongs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          onChange: this.fileFunc,\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\",\n          onClick: this.sendDatatoServer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Yogesh/Desktop/musicplayer/musicapp/musicproject/src/Components/form.js"],"names":["React","Component","axios","Form","constructor","props","getformData","e","setState","target","name","value","Name","selectedsongs","fileFunc","files","sendDatatoServer","preventDefault","data","FormData","append","state","file","JSON","stringify","post","then","catch","error","console","log","message","alert","playlistname","cover","year","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from \"axios\"\r\n\r\nclass Form extends Component {\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n        playlistname:\"\",\r\n        cover:\"\",\r\n        Name:\"\",\r\n        year:\"\",\r\n        file:\"\"\r\n    }\r\n}\r\n\r\ngetformData = (e) => {\r\n    this.setState({\r\n        [e.target.name]:e.target.value,\r\n        Name:this.props.selectedsongs,\r\n    })\r\n\r\n//     if(e.target.files){\r\n//         let file = e.target.files[0];\r\n//    let filereader = new FileReader();\r\n//    filereader.addEventListener(\"load\", ()=>{\r\n//     let imagetag = document.querySelector(\"img\"); \r\n//     imagetag.src = filereader.result\r\n//    });\r\n//    filereader.readAsDataURL(file)   \r\n//     }\r\n}\r\n\r\nfileFunc = (e) => {\r\n    this.setState({\r\n        [e.target.name]:e.target.files[0]\r\n    })\r\n}\r\n\r\nsendDatatoServer = (e) => {\r\n       e.preventDefault()\r\n      const data = new FormData();\r\n      data.append('file', this.state.file)\r\n      data.append('body', JSON.stringify(this.state))\r\n      if(this.state.file.name){\r\n axios.post(\"http://localhost:4000/test\", data).then(data=>{\r\n}).catch(error => console.log(error.message))\r\n\r\n} else {\r\n    alert(\"must choose a file\")\r\n}\r\n}\r\n\r\n    render(){\r\n    return (<>\r\n        <section className=\"songlist\">\r\n        </section>\r\n        <form method=\"POST\" action=\"/\" encType=\"multipart/form-data\">\r\n            <input type=\"text\" placeholder = \"Playlist Name\" name=\"playlistname\" onChange={this.getformData} value={this.state.playlistname}/>\r\n            <input type=\"text\" placeholder=\"cover image url\" name=\"cover\" onChange={this.getformData} value={this.state.cover}/>\r\n            <input type=\"text\" placeholder=\"\" name=\"Name\" onChange={this.getformData} value={this.props.selectedsongs}/>\r\n            <input type=\"file\" name=\"file\" onChange={this.fileFunc} multiple />\r\n            <input type=\"submit\" value=\"submit\" onClick={this.sendDatatoServer}/>  \r\n        </form>\r\n        </>\r\n    )\r\n}\r\n}\r\n\r\nexport default Form"]},"metadata":{},"sourceType":"module"}