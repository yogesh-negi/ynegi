{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yogesh\\\\Desktop\\\\musicplayer\\\\musicapp\\\\musicproject\\\\src\\\\Components\\\\form.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getformData = e => {\n      this.setState({\n        playlistname: e.target.playlistname,\n        cover: e.target.cover,\n        year: e.target.year,\n        Name: this.props.selectedsongs\n      }); //     if(e.target.files){\n      //         let file = e.target.files[0];\n      //    let filereader = new FileReader();\n      //    filereader.addEventListener(\"load\", ()=>{\n      //     let imagetag = document.querySelector(\"img\"); \n      //     imagetag.src = filereader.result\n      //    });\n      //    filereader.readAsDataURL(file)   \n      //     }\n    };\n\n    this.fileFunc = e => {\n      this.setState({\n        field: e.target.files[0]\n      });\n    };\n\n    this.sendDatatoServer = e => {\n      //       e.preventDefault()\n      //       const data = new FormData();\n      //       data.append('file', this.state.field)\n      //       if(this.state.field.name){\n      //  axios.post(\"http://localhost:4000/test\", data).then(data=>{\n      // }).catch(error => console.log(error.message))\n      // } else {\n      //     alert(\"must choose a file\")\n      // }\n      axios.post(\"http://localhost:4000/test\");\n    };\n\n    this.state = {\n      playlistname: \"\",\n      cover: \"\",\n      Name: \"\",\n      year: \"\",\n      field: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"songlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        action: \"/\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"playlistname\",\n          onChange: this.getformData,\n          value: this.state.playlistname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cover\",\n          onChange: this.getformData,\n          value: this.state.cover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Name\",\n          onChange: this.getformData,\n          value: this.props.selectedsongs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"year\",\n          onChange: this.getformData,\n          value: this.state.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"field\",\n          onChange: this.fileFunc,\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\",\n          onClick: this.sendDatatoServer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Yogesh/Desktop/musicplayer/musicapp/musicproject/src/Components/form.js"],"names":["React","Component","axios","Form","constructor","props","getformData","e","setState","playlistname","target","cover","year","Name","selectedsongs","fileFunc","field","files","sendDatatoServer","post","state","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from \"axios\"\r\n\r\nclass Form extends Component {\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n        playlistname:\"\",\r\n        cover:\"\",\r\n        Name:\"\",\r\n        year:\"\",\r\n        field:\"\"\r\n    }\r\n}\r\n\r\ngetformData = (e) => {\r\n    this.setState({\r\n        playlistname:e.target.playlistname,\r\n        cover:e.target.cover,\r\n        year:e.target.year,\r\n        Name:this.props.selectedsongs,\r\n    })\r\n\r\n//     if(e.target.files){\r\n//         let file = e.target.files[0];\r\n//    let filereader = new FileReader();\r\n//    filereader.addEventListener(\"load\", ()=>{\r\n//     let imagetag = document.querySelector(\"img\"); \r\n//     imagetag.src = filereader.result\r\n//    });\r\n//    filereader.readAsDataURL(file)   \r\n//     }\r\n}\r\n\r\nfileFunc = (e) => {\r\n    this.setState({\r\n        field:e.target.files[0]\r\n    })\r\n}\r\n\r\nsendDatatoServer = (e) => {\r\n//       e.preventDefault()\r\n//       const data = new FormData();\r\n//       data.append('file', this.state.field)\r\n//       if(this.state.field.name){\r\n//  axios.post(\"http://localhost:4000/test\", data).then(data=>{\r\n// }).catch(error => console.log(error.message))\r\n\r\n// } else {\r\n//     alert(\"must choose a file\")\r\n// }\r\naxios.post(\"http://localhost:4000/test\")\r\n}\r\n\r\n    render(){\r\n    return (<>\r\n        <section className=\"songlist\">\r\n        </section>\r\n        <form method=\"POST\" action=\"/\" encType=\"multipart/form-data\">\r\n            <input type=\"text\" name=\"playlistname\" onChange={this.getformData} value={this.state.playlistname}/>\r\n            <input type=\"text\" name=\"cover\" onChange={this.getformData} value={this.state.cover}/>\r\n            <input type=\"text\" name=\"Name\" onChange={this.getformData} value={this.props.selectedsongs}/>\r\n            <input type=\"text\" name=\"year\" onChange={this.getformData} value={this.state.year}/>\r\n            <input type=\"file\" name=\"field\" onChange={this.fileFunc} multiple />\r\n            <input type=\"submit\" value=\"submit\" onClick={this.sendDatatoServer}/>  \r\n        </form>\r\n        </>\r\n    )\r\n}\r\n}\r\n\r\nexport default Form"]},"metadata":{},"sourceType":"module"}