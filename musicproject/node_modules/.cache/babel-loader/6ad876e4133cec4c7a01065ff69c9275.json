{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yogesh\\\\Desktop\\\\musicplayer\\\\musicapp\\\\musicproject\\\\src\\\\Components\\\\songsaudiofiles.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport jsondata from \"./data.json\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport \"../App.css\";\n\nclass MusicPlayer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.Updatesrc = () => {\n      fetch(\"https://yogeshnegi.online/Openplaylist\").then(response => response.json()).then(data => {\n        this.setState({\n          audio: data[data.indexOf(this.props.songname.toString())]\n        }, () => {\n          let audio = document.querySelector(\"audio\");\n          let range = document.querySelector(\".range\");\n          let playpause = document.querySelector(\"play/pause\");\n          range.max = audio.duration;\n\n          if (audio.paused) {\n            playpause.icon = \"\";\n          }\n\n          audio.src = \"https://yogeshnegi.online/\" + this.state.audio;\n        });\n      });\n    };\n\n    this.skipsong = () => {\n      let audio = document.querySelector(\"audio\");\n      let range = document.querySelector(\".range\");\n      range.max = audio.duration;\n      audio.currentTime = range.value;\n    };\n\n    this.state = {\n      audio: []\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.songname !== this.props.songname) {\n      this.Updatesrc();\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          name: \"autonext\",\n          onEnded: e => {\n            this.props.changesong(e);\n          },\n          autoPlay: true,\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            type: \"audio/mp3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customPlayer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.props.songname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"currenttime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"Icons\",\n              icon: faArrowLeft,\n              name: \"Prev\",\n              onClick: e => {\n                this.props.changesong(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"Icons\",\n              name: \"Play/Pause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"Icons\",\n              icon: faArrowRight,\n              name: \"Next\",\n              onClick: e => {\n                this.props.changesong(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          onChange: () => {\n            this.skipsong();\n          },\n          defaultValue: \"0\",\n          className: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MusicPlayer;","map":{"version":3,"sources":["C:/Users/Yogesh/Desktop/musicplayer/musicapp/musicproject/src/Components/songsaudiofiles.js"],"names":["React","Component","jsondata","FontAwesomeIcon","faPlay","faPause","faArrowRight","faArrowLeft","MusicPlayer","constructor","props","Updatesrc","fetch","then","response","json","data","setState","audio","indexOf","songname","toString","document","querySelector","range","playpause","max","duration","paused","icon","src","state","skipsong","currentTime","value","componentDidUpdate","prevProps","prevState","snapshot","render","e","changesong"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Component} from \"react\"\r\nimport jsondata from \"./data.json\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faPause, faArrowRight, faArrowLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport \"../App.css\"\r\n\r\nclass MusicPlayer extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            audio:[],\r\n        }\r\n    }\r\n\r\nUpdatesrc = () => {\r\n    \r\n   fetch(\"https://yogeshnegi.online/Openplaylist\").then(response => response.json())\r\n\r\n       .then(data => {\r\n       this.setState({\r\n            audio:data[data.indexOf(this.props.songname.toString())]\r\n        }, ()=>{\r\n             let audio = document.querySelector(\"audio\");\r\n             let range = document.querySelector(\".range\");\r\n             let playpause = document.querySelector(\"play/pause\");\r\n\r\n             range.max = audio.duration; \r\n             if(audio.paused){\r\n                playpause.icon = \"\"\r\n             }\r\n            \r\n             audio.src = \"https://yogeshnegi.online/\"+this.state.audio\r\n        })\r\n    })\r\n \r\n}\r\n\r\nskipsong = () => {\r\n    let audio = document.querySelector(\"audio\");\r\n    let range = document.querySelector(\".range\");\r\n    range.max = audio.duration;\r\n    audio.currentTime = range.value    \r\n}\r\n\r\n\r\n\r\n\r\ncomponentDidUpdate(prevProps, prevState, snapshot){\r\n    \r\nif(prevProps.songname !== this.props.songname){\r\n    this.Updatesrc()\r\n} else {\r\nreturn false\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <section>\r\n                \r\n            <audio name=\"autonext\" onEnded={(e)=>{this.props.changesong(e)}} autoPlay={true} controls>\r\n              <source type=\"audio/mp3\" ></source>\r\n            </audio>\r\n            <div className=\"customPlayer\">\r\n            <p>{this.props.songname}</p>\r\n            <p className=\"currenttime\"></p>\r\n            \r\n            <div>\r\n            <FontAwesomeIcon className=\"Icons\" icon={faArrowLeft} name=\"Prev\" onClick={(e)=>{this.props.changesong(e)}}/>\r\n            \r\n            </div>\r\n            <div>\r\n            <FontAwesomeIcon className=\"Icons\" name=\"Play/Pause\" />\r\n            </div>\r\n            <div>\r\n            <FontAwesomeIcon className=\"Icons\" icon={faArrowRight} name=\"Next\" onClick={(e)=>{this.props.changesong(e)}}/>\r\n            </div>\r\n            </div>\r\n            <input type=\"range\" onChange={()=>{this.skipsong()}} defaultValue=\"0\" className=\"range\"/>\r\n            </section>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}   \r\n\r\nexport default MusicPlayer"]},"metadata":{},"sourceType":"module"}