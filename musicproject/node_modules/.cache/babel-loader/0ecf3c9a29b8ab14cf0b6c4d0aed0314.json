{"ast":null,"code":"var createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar bodyparser = require(\"body-parser\");\n\nvar urlencoder = bodyparser.urlencoded({\n  extended: true\n});\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar cors = require('cors');\n\nvar indexRouter = require('./routes/index');\n\nvar usersRouter = require('./routes/users');\n\nvar testApi = require(\"./routes/testApi\");\n\nvar deleteplaylist = require(\"./routes/deleteplaylist\");\n\nvar app = express(); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\napp.use(logger('dev'));\napp.use(cors());\napp.use(bodyparser.json({\n  limit: '50mb'\n}));\napp.use(express.urlencoded({\n  limit: '50mb',\n  extended: true\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public/uploads')));\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use(\"/test\", urlencoder, testApi);\napp.use(\"/delete\", urlencoder, deleteplaylist); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;","map":{"version":3,"sources":["C:/Users/Yogesh/Desktop/musicplayer/musicapp/musicproject/src/api/app.js"],"names":["createError","require","express","path","bodyparser","urlencoder","urlencoded","extended","cookieParser","logger","cors","indexRouter","usersRouter","testApi","deleteplaylist","app","set","join","__dirname","use","json","limit","static","req","res","next","err","locals","message","error","get","status","render","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAII,UAAU,GAAGD,UAAU,CAACE,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAjB;;AACA,IAAIC,YAAY,GAAGP,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIS,IAAI,GAAGT,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIU,WAAW,GAAGV,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIW,WAAW,GAAGX,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIY,OAAO,GAAGZ,OAAO,CAAC,kBAAD,CAArB;;AACA,IAAIa,cAAc,GAAGb,OAAO,CAAC,yBAAD,CAA5B;;AACA,IAAIc,GAAG,GAAGb,OAAO,EAAjB,C,CAGA;;AACAa,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACAD,GAAG,CAACI,GAAJ,CAAQV,MAAM,CAAC,KAAD,CAAd;AACAM,GAAG,CAACI,GAAJ,CAAQT,IAAI,EAAZ;AACAK,GAAG,CAACI,GAAJ,CAAQf,UAAU,CAACgB,IAAX,CAAgB;AAACC,EAAAA,KAAK,EAAC;AAAP,CAAhB,CAAR;AACAN,GAAG,CAACI,GAAJ,CAAQjB,OAAO,CAACI,UAAR,CAAmB;AAACe,EAAAA,KAAK,EAAC,MAAP;AAAgBd,EAAAA,QAAQ,EAAE;AAA1B,CAAnB,CAAR;AACAQ,GAAG,CAACI,GAAJ,CAAQX,YAAY,EAApB;AACAO,GAAG,CAACI,GAAJ,CAAQjB,OAAO,CAACoB,MAAR,CAAenB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,gBAArB,CAAf,CAAR;AACAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaR,WAAb;AACAI,GAAG,CAACI,GAAJ,CAAQ,QAAR,EAAkBP,WAAlB;AACAG,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAgBd,UAAhB,EAA4BQ,OAA5B;AACAE,GAAG,CAACI,GAAJ,CAAQ,SAAR,EAAkBd,UAAlB,EAA8BS,cAA9B,E,CACA;;AACAC,GAAG,CAACI,GAAJ,CAAQ,UAASI,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACzB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAe,GAAG,CAACI,GAAJ,CAAQ,UAASO,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACR,GAAJ,CAAQe,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiBnB,GAAjB","sourcesContent":["var createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar bodyparser = require(\"body-parser\");\r\nvar urlencoder = bodyparser.urlencoded({extended:true});\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\nvar cors = require('cors');\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar testApi = require(\"./routes/testApi\");\r\nvar deleteplaylist = require(\"./routes/deleteplaylist\");\r\nvar app = express();\r\n\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'jade');\r\napp.use(logger('dev'));\r\napp.use(cors());\r\napp.use(bodyparser.json({limit:'50mb'}))\r\napp.use(express.urlencoded({limit:'50mb' , extended: true}));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public/uploads')));\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\napp.use(\"/test\",urlencoder, testApi);\r\napp.use(\"/delete\",urlencoder, deleteplaylist);\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n"]},"metadata":{},"sourceType":"module"}