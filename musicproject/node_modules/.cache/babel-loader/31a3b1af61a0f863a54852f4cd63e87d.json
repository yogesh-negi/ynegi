{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yogesh\\\\Desktop\\\\musicplayer\\\\musicapp\\\\musicproject\\\\src\\\\Components\\\\form.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getformData = e => {\n      this.setState({\n        [e.target.name]: e.target.value,\n        Name: this.props.selectedsongs,\n        field: e.target.files[0]\n      }); //     if(e.target.files){\n      //         let file = e.target.files[0];\n      //    let filereader = new FileReader();\n      //    filereader.addEventListener(\"load\", ()=>{\n      //     let imagetag = document.querySelector(\"img\"); \n      //     imagetag.src = filereader.result\n      //    });\n      //    filereader.readAsDataURL(file)   \n      //     }\n    };\n\n    this.sendDatatoServer = e => {\n      e.preventDefault();\n      const data = new FormData();\n      data.append('file', this.state.field);\n      axios.post(\"http://localhost:4000/post\", data).then(data => {\n        document.querySelector('#photo').src = data.data;\n      });\n    };\n\n    this.state = {\n      playlistname: \"\",\n      cover: \"\",\n      Name: \"\",\n      year: \"\",\n      field: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      action: \"/\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"playlistname\",\n        onChange: this.getformData,\n        value: this.state.playlistname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"cover\",\n        onChange: this.getformData,\n        value: this.state.cover\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Name\",\n        onChange: this.getformData,\n        value: this.props.selectedsongs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"year\",\n        onChange: this.getformData,\n        value: this.state.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"field\",\n        onChange: this.getformData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        onClick: this.sendDatatoServer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Yogesh/Desktop/musicplayer/musicapp/musicproject/src/Components/form.js"],"names":["React","Component","axios","Form","constructor","props","getformData","e","setState","target","name","value","Name","selectedsongs","field","files","sendDatatoServer","preventDefault","data","FormData","append","state","post","then","document","querySelector","src","playlistname","cover","year","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from \"axios\"\r\n\r\nclass Form extends Component {\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n        playlistname:\"\",\r\n        cover:\"\",\r\n        Name:\"\",\r\n        year:\"\",\r\n        field:\"\"\r\n    }\r\n}\r\n\r\ngetformData = (e) => {\r\n    this.setState({\r\n        [e.target.name]:e.target.value,\r\n         Name:this.props.selectedsongs,\r\n         field:e.target.files[0]\r\n    })\r\n\r\n//     if(e.target.files){\r\n//         let file = e.target.files[0];\r\n//    let filereader = new FileReader();\r\n//    filereader.addEventListener(\"load\", ()=>{\r\n//     let imagetag = document.querySelector(\"img\"); \r\n//     imagetag.src = filereader.result\r\n//    });\r\n//    filereader.readAsDataURL(file)   \r\n//     }\r\n}\r\n\r\nsendDatatoServer = (e) => {\r\n      e.preventDefault()\r\n      const data = new FormData();\r\n      data.append('file', this.state.field)\r\n axios.post(\"http://localhost:4000/post\", data).then(data=>{\r\n    document.querySelector('#photo').src = data.data\r\n})\r\n    \r\n}\r\n\r\n    render(){\r\n    return (\r\n        <form method=\"POST\" action=\"/\" encType=\"multipart/form-data\">\r\n            <input type=\"text\" name=\"playlistname\" onChange={this.getformData} value={this.state.playlistname}/>\r\n            <input type=\"text\" name=\"cover\" onChange={this.getformData} value={this.state.cover}/>\r\n            <input type=\"text\" name=\"Name\" onChange={this.getformData} value={this.props.selectedsongs}/>\r\n            <input type=\"text\" name=\"year\" onChange={this.getformData} value={this.state.year}/>\r\n            <input type=\"file\" name=\"field\" onChange={this.getformData}/>\r\n            <img id=\"photo\"/>\r\n            <input type=\"submit\" value=\"submit\" onClick={this.sendDatatoServer}/>  \r\n        </form>\r\n    )\r\n}\r\n}\r\n\r\nexport default Form"]},"metadata":{},"sourceType":"module"}